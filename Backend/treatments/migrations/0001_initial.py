# Generated by Django 5.0.1 on 2024-02-18 14:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("doctors", "0001_initial"),
        ("patients", "0005_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Prescription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("age", models.IntegerField()),
                ("weight", models.IntegerField()),
                ("address", models.CharField(max_length=255)),
                ("bp_low", models.IntegerField()),
                ("bp_high", models.IntegerField()),
                ("patient_name", models.CharField(max_length=100)),
                ("doctor_name", models.CharField(max_length=100)),
                ("specialist", models.CharField(max_length=100)),
                ("notes", models.CharField(blank=True, max_length=255, null=True)),
                ("date", models.DateField()),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="patients.patient",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Medicine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("medicine_name", models.CharField(max_length=255)),
                ("duration", models.IntegerField()),
                ("interval", models.IntegerField(blank=True, null=True)),
                (
                    "meal_time",
                    models.CharField(
                        blank=True,
                        choices=[("before", "Before"), ("after", "After")],
                        max_length=6,
                        null=True,
                    ),
                ),
                ("breakfast", models.BooleanField(default=False)),
                ("lunch", models.BooleanField(default=False)),
                ("dinner", models.BooleanField(default=False)),
                (
                    "prescription",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="medicines",
                        to="treatments.prescription",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Diagnosis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("disease", models.CharField(max_length=255)),
                (
                    "prescription",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="diagnoses",
                        to="treatments.prescription",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Advice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("advice", models.CharField(max_length=255)),
                (
                    "prescription",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="advices",
                        to="treatments.prescription",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PrescriptionAccess",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="doctors.doctor"
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="patients.patient",
                    ),
                ),
                (
                    "prescription",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="treatments.prescription",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Request",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("date", models.DateField(auto_now_add=True)),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="doctors.doctor"
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="patients.patient",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Symptom",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symptom", models.CharField(max_length=255)),
                (
                    "prescription",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="symptoms",
                        to="treatments.prescription",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Test",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("test_name", models.CharField(max_length=255)),
                ("image_path", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "prescription",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tests",
                        to="treatments.prescription",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Treatment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("disease", models.CharField(max_length=100, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ongoing", "Ongoing"),
                            ("success", "Success"),
                            ("failure", "Failure"),
                        ],
                        default="ongoing",
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField(auto_now_add=True)),
                ("last_date", models.DateField(auto_now=True)),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="doctors.doctor"
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="patients.patient",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="prescription",
            name="treatment",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="treatments.treatment",
            ),
        ),
        migrations.AddConstraint(
            model_name="diagnosis",
            constraint=models.UniqueConstraint(
                fields=("prescription", "disease"), name="unique_prescription_disease"
            ),
        ),
        migrations.AddConstraint(
            model_name="advice",
            constraint=models.UniqueConstraint(
                fields=("prescription", "advice"), name="unique_prescription_advice"
            ),
        ),
        migrations.AddConstraint(
            model_name="prescriptionaccess",
            constraint=models.UniqueConstraint(
                fields=("prescription", "doctor"), name="unique_prescription_doctor"
            ),
        ),
        migrations.AddConstraint(
            model_name="request",
            constraint=models.UniqueConstraint(
                fields=("patient", "doctor"), name="unique_patient_doctor_date"
            ),
        ),
        migrations.AddConstraint(
            model_name="symptom",
            constraint=models.UniqueConstraint(
                fields=("prescription", "symptom"), name="unique_prescription_symptom"
            ),
        ),
        migrations.AddConstraint(
            model_name="test",
            constraint=models.UniqueConstraint(
                fields=("prescription", "test_name"),
                name="unique_prescription_test_name",
            ),
        ),
        migrations.AddConstraint(
            model_name="treatment",
            constraint=models.UniqueConstraint(
                fields=("patient", "doctor", "disease", "start_date"),
                name="unique_patient_doctor_disease_start_date",
            ),
        ),
    ]
